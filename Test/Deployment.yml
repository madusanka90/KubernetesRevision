apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 4
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
      maxSurge: 2
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: nginx
      tier: frontend
      version: v1
    matchExpressiosns:
      - {key: version, operator: In, values: [v1, v2, v3, v4]}
  template:
    metadata:
      name: nginx
      labels:
        app: nginx
        tier: frontend
        version: v1
    spec:
      containers:
        - name: nginx
          image: bhagyam90/nginx:v1
          ports:
            - name: http
              protocol: TCP
              containerPort: 80
          env:
            - name: NGINX_HOME
              configMapKeyRef:
                name: mysqlconfig
                key: path
          volumeMounts:
            - name: nginx-vol
              mountPath: "/usr/local/nginx/html"
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "300m"
              memory: "512Mi"
        - name: mysql
          image: mysql:latest
          ports:
            - name: mysql
              protocol: TCP
              containerPort: 3306
          env:
            - name: MYSQL_USER
              configMapKeyRef:
                name: mysqlconfig
                key: user
            - name: MYSQL_ROOT_PASSWORD
              secretKeyRef:
                name: mysqlsec
                key: password
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "300m"
              memory: "512Mi"
      volumes:
        - name: nginx-vol
          persistentVolumeClaim:
            claimName: nginxpvc